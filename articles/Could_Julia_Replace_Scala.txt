Let’s be honest: A lot of us would really love to remove Scala from our Data-Science workflow. Spark is a great way to manage enterprise-level Hadoop and coordinate workers for deep learning, however, the effort overhead is significantly heavier than that of traditional statistical languages like R and Python. Fortunately, there is a language developed at MIT that is making its academic rounds from MIT that holds a lot of potential to combine all the things we love about Spark, Python, and R into one convenient package.

Spark is a multi-functional data-management tool built within Scala, and is the most common segment of the scalable language that Data-Scientists tend to work in. Spark’s primary strength comes with big data, as its integration with Hadoop as well as fast speed make it extremely ideal for use with large, un-managed datasets that require a-lot of processing in order to access and manipulate.

However, Spark’s inheritence leaves it dead in the water in a-lot of ways that would traditionally make a language non-viable for machine learning operations. A debatable disadvantage of Spark is that Spark is far more difficult to use and read than the other languages typically used in Data Science. Among the languages typically used are languages like R, Python, Matlab, and Go, among many others. However, a-lot of these languages have their own fair share of issues. In Python, it can often be a tedious task, or just impossible to work with large data-sets. R has its own share of disadvantages stemming back from its origin.

Though I definitely wouldn’t say that R is all that challenging (most of the time,) languages like Python really put R into the ground from a start-up standpoint. Additionally, R has its own fair share of issues with speed, though certainly faster than Python. Last but not least, data-handling can be a little rough in R…

But when we compare all of these disadvantages to that of Scala, Scala/Spark has a significantly more difficult startup curve, sometimes being extremely hard to work with, and making it feel easier to separate your data into different files to read into a different language.