While still in Beta, BigQuery ML has been available since mid last year; however, I didn’t get around to working with this Google cloud-based Machine Learning offering until recently. As a non-data scientist, my first impression — what’s not to like? After all, the ability to run ML models from the comfort of web-based SQL editor is a dream come-true for any analyst out there. Not only this platform eliminates the need to learn a programming language, be it R , Python or SAS; it also streamlines data engineering process by leveraging existing BigQuery data sources, instead of having to bring external data into your model. Effectively, this product removes a number of barriers to entry into this coveted data science specialty and democratizes the field of ML by allowing any analyst with adequate knowledge of SQL to run linear and logistic regression models without having to invest in pricey hardware, such as multi-core GPUs usually needed to support a scalable ML project. Below image does a great job showcasing platform’s capabilities:

BigQuery ML demo from Google AI Blog

Many aspiring data science students turn to the trusted Titanic: Machine Learning from Disaster data set from one of the most popular Kaggle competitions to practice working with binary classification models. In fact, for a beginner, a binary classification model is a fairly easy concept to grasp: your task is to simply predict whether a certain event will occur or will not happen; or whether a certain condition will evaluate to be true or false. For this problem, anyone is able to wrap their head around the concept of predicting whether a particular Titanic ship passenger survives one of the most monumental ship wrecks of all times: there are only two possibilities here. To follow along you simply need to log in to existing Kaggle account or create a new one and download all three files provides. The irony of using Kaggle website (purchased by Google back in 2017) and BigQuery platform (another Google product) is not lost on me. Let’s dive into this problem using sample data set and a working BigQuery instance.