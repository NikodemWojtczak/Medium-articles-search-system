Visualizations are always been an efficient way to represent and explain many statistical details. In image processing histograms are used to depict many aspects regarding the image we are working with. Such as,

Exposure

Contrast

Dynamic Range

Saturation

and many more. By visualizing the histogram we can improve the visual presence of an image and also we can find out what type of image processing could have been applied by comparing the histograms of an image.

What is a Histogram?

Images are stored as pixels values, each pixel value represents a color intensity value. Histograms are frequency distribution of these intensity values that occur in an image.

h(i) = the number of pixels in I(image) with the intensity value i

For example, if i = 0, the h(0) is the number of pixels with a value of 0.

Creating Histogram of an Image with skimage

Grayscale Image

from skimage import io

import matplotlib.pyplot as plt image = io.imread('~/Desktop/Lenna_gray.png') ax = plt.hist(image.ravel(), bins = 256)

plt.show() Output: Figure-1

Figure-1

In the above code, we have loaded the grayscale image of Lenna and generated its histogram using matplotlib. Since the image is stored in the form of a 2D ordered matrix we converted it to a 1D array using the ravel() method.

Color Image

In color images, we have 3 color channels representing RGB. In Combined Color Histogram the intensity count is theâ€¦