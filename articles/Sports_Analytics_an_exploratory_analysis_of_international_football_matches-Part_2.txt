In my previous article (Part 1 of this series), I’ve been implementing some interesting visualization tools for a meaningful exploratory analysis. Then, with the Python package Streamlit, I made them interactive in the form of a web app.

In this article, I’m going to continue working on the same dataset as before, this time focusing on the interaction between two teams. I will keep using Plotly as visualization tool, since it provides the possibility to interact with graphs and collect relevant information. Since I won’t attach the code of my previous article, if you are new to Streamlit I strongly recommend to read it before starting.

Now, as anticipated, I want to dwell on the matches between two teams of interest. So, let’s start by filtering our initial dataset (available here) with users’ multiselection:

import streamlit as st

import pandas as pd

import numpy as np

import plotly.express as px

import seaborn as sns

import matplotlib.pyplot as plt

import plotly.graph_objects as go

from plotly.subplots import make_subplots st.title('Internationa Football matches')

df = pd.read_csv("results.csv") st.subheader('Comparing 2 teams')

teams_to_compare = st.multiselect('Pick your teams', df['home_team'].unique()) comparison = df[(df['home_team'].isin(teams)) & (df['away_team'].isin(teams)) ]

comparison = comparison.reset_index(drop=True)

st.write(comparison)

st.write('Number of matches: ', len(comparison))

The object ‘teams_to_compare’ will be a list of two teams, and I’m interested in analyzing those matches where the two teams played one against the other (regardless of which one was playing at home). Then, I asked my app to show me the new filtered dataset together with the number of matches:

Here, I’m interested in all the matches England vs Scotland, and this is how my final dataset looks like.

Now let’s perform some analytics on these two teams.