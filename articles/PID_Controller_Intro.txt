PID Controller Intro

PID controller is a way to regulate an application to smoothly follow a value or a path. I first learnt the idea here, which introduced how to drive a car to follow a specific path. Although a full application explanation can be extensively complex, it summarised the math behind it in a super elegant and concise way, and made the idea can easily extended to many real life problems. In this post, let’s follow the key structure and explore how PID controller works.

In this post, we will follow the path:

P: Proportional PD: Proportional-Derivative PID: Proportional-Derivative–Integral

Base Setting

Let’s learn the idea through an implementation of a problem. Suppose we have a robot car object, and we hope the car to control itself to follow a path, which is going to be a straight line in this case, and the only way for the car to control itself is by adjusting its steering or direction so that it can gradually and gracefully approaching the path and follow that path once reach there. In a nutshell, the problem is to:

Control a self-driving car to follow a straight line by changing its steering

The full implementation of the car object is here(explanation of the whole object is behind our scope). Basically the robot object follows the structure: