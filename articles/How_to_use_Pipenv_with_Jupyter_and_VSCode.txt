Update 2021

This article was written in 2019. During the years of development, I have encountered various issues with the pipenv setup. I changed the environment and dependency management to using a conda environment and a requirements file with pip-compile. My latest setup is described in my new article “How to start a data science project” https://towardsdatascience.com/how-to-start-a-data-science-project-boilerplate-in-2021-33d81393e50

If you still want to use pipenv then the article should still be valuable. Enjoy.

Intro

Currently, I study Artificial Intelligence at the JKU university and for some exercises, we need to use jupyter notebooks. Having worked a little bit with Python the package manager pipenv proofed to be valuable. Now, I encountered some problems using it with Jupyter notebooks and within VSCode. Therefore, a short guide on how I solved it.

Table of Contents

The Issue

As I described in my last article Working with Jupyter and VSCode I use pyenv and pipenv for managing all packages in my python development. I also referenced some articles why this way is helpful and easy to use. Now, it is necessary to dive a little more into it. There are two ways you would want to develop with jupyter notebook. Either you work with it directly in the browser or inside VSCode. In both use cases, there can emerge problems.

Developing with Jupyter Notebook in the browser

Jupyter Notebook in the browser

Let’s say you already have the proper python environment on your system and now you want to create a specific one for a project.