The data shows high sparsity and high complexity. This is mainly because people don’t check-ins consistently and continuously everywhere they go. Also, human activity is very complex in New York City due to its high population density and high venue density with everything on top of each other. Therefore, we have to pre-process the data to collect the right and meaningful information we need.

A trajectory is a useful extracted feature from user check-in records that includes user activity pattern. The trajectory is defined as a sequence of a user’s activities that are connected within a defined time gap. For this time gap, we used 3 hours and we pre-processed the data by calculating the time gap between a user’s two activities and defining trajectories.

Figure: pre-processed data after grouping by user and trajectory

The dataset is available here.

Mobility HMM

Most of the existing Mobility Models use Hidden Markov Models to represent human mobility. Hidden Markov Models are simply Markov Models with hidden states that will better abstract not observable states of a user. One of them is built based on a Hidden Markov Model that has emission probability generated from bi-variate Gaussian distribution and predicts the next location of a user. However, we wanted to use all three features; location, time, and category. This led us to design and implement a Hidden Markov Model which has different emission probabilities for each feature observed from each state. In our model, a state generates three features, which are location(longitude and latitude), time(in seconds), and category. To generate these features, Gaussian distribution is used for location and time and multinomial distribution is used for categories. We have implemented this model ground up, referring to existing implementations for HMMs in hmmlearn library.

Figure: Mobility Hidden Markov Model

Simple Model

Figure. Global Model v.s. Personal Model

There are two levels of our simple model as it’s shown in the figure above, one is the global model and the other is the personal model.

The global model is trained with all user data, it only represents a general life pattern of all users. It is a good substitute model for the user who doesn’t have enough data to generate a high-quality personal model, but it doesn’t reflect any personal preference.

The personal model is trained for each user with its own data, it indicates the specific mobility pattern of this user. However, as mentioned before, the data set has high sparsity, which means many users don’t have abundant data to generate its personalized model.

To sum up:

Globalized Model:

Can only show basic life pattern of all people

Does not show the personality of people, too much generalization

Personalized Model:

Can only show the unique lifestyle of each person

Need a lot of trajectory data for each user to personalize

To avoid the disadvantages of either of the two models, some middle-level models should be developed.

Localized Model

Apparently, the simple model is too simple and naive for this complex and hard to tackle the problem. Even with our custom mobility Hidden Markov Model, this performs badly. Also, it is obvious that the global model is too generic while the personal model is too specific and costly for this problem.

Heuristically, the granularity for our model should be reconsidered. Grouping users and predict based on the group pattern becomes a great option. Not only grouping helps with the granularity of our final model, but also it contributes to dealing with the data sparsity problem. Users will not record their activities everyday, normally they check-in at a very unpredictable time. And the sparsity of their data brings us a lot of trouble predicting their activity.