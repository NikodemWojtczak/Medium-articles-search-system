Tutorial: Automatically Analyzing Laboratory Data to Create a Performance Map

Automatically Analyzing Laboratory Test Data

It’s very common that scientists find themselves with large data sets. Sometimes it comes in the form of gigabytes worth of data in a single file. Other times it’s hundreds of files, each containing a small amount of data. Either way, it’s hard to manage. Hard to make sense of. Hard for your computer to process. You need a way to simplify the process, to make the data set more manageable, and to help you keep track of everything.

That’s what this tutorial is all about. We’re in the process of writing Python scripts that will automatically analyze all of the data for you and store the data with meaningful, intuitive file names. All while using an example taken from actual research, so you know that the skills you’re developing are practical and useful.

The first post in this tutorial introduced the concepts of the tutorial. If the terms “heat pump water heater”, “coefficient of performance (COP)”, and “performance map” don’t mean anything to you, you might want to read it.

The second post introduced the companion data set, and split the data set into multiple files with user-friendly names.

The companion data set is a valuable part of the tutorial process, as it allows you to follow along. You can write the exact same code that I’ll present, run the code, see the results, and compare it to results I present. In that way you can ensure that you’re doing it right.

At the end of the second part of the tutorial we now have three data files, each containing test results at a specified ambient temperature. In each of those files we see electricity consumption of the heat pump, the temperature of water in the storage tank, and the air temperature surrounding the water heater.

The next step is to process those results. We need to write some code that automatically makes sense of the data, calculates the COP of the heat pump, and plots the data so that we can visually understand it.