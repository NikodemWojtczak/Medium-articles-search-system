Photo by Sean Foley on Unsplash

Member-only story Computer Vision for Vaporwave Art

Reading through publications and implementing practical algorithms is exciting, of course. I enjoy finding clever ways to segment images, detect people being jerks, or even help a robot get through a farm. Yet, there are weeks in which I don’t want to use computer vision for anything meaningful. On days when the brain is feeling especially smooth, it’s relaxing to let the code pour from the fingers and use the field for a benign purpose.

This week was one of those weeks. In addition to my involvement in technology, I enjoy fashion and art. I recently discovered a fringe art form known as Vaporwave. The form adopts elements of popular internet era art forms such as glitch art and chillwave. Vaporwave differs from these other forms with its emphasis on nostalgic topics, often using 1980’s style pop art from American and Japanese culture. Graphical user interfaces (GUIs) of the 90’s and early 2000’s are also common gimmicks. Such objects illicit feelings of simplicity, when personal computers were still nascent and the tech industry was considerably more tame.

Vaporwave has many forms and is seen in digital media and fashion!

Growing up during the cross of the millennia, I felt these pieces paid homage to my upbringing. Being an active image processing programmer, I decided to partake in the art form. I developed a short Python script that Vaporwaved any given photo.

Glitch Art - Method

In image processing and computer vision, it’s common to use digital operations to clean noise and isolate items of interest. This project did the complete opposite. The goal was to add noise and destroy the image, but in a tasteful manner.

One of the features of Vaporwave art I wanted to include was glitch art. This is when digital errors are purposely used to make artistic patterns. This art form has an especially powerful sense when applied to the human face.

Useful libraries, such as OpenCV, make facial recognition fairly simple. OpenCV has models that can be used to detect different facial poses and features. I specifically wanted to develop functions…