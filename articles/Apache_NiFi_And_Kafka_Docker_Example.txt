In the Hadoop ecosystem, Apache NiFi is commonly used for the ingestion phase. Apache NiFi offers a scalable way of managing the flow of data between systems. When you’re trying to get information from point A to B, numerous issues can occur. For instance, networks can fail, software crashes, people make mistakes, the data can be too big, too fast, or in the wrong format. NiFi will handle these issues under the hood so developers can focus on the applications themselves.

Some of NiFi’s features include:

Guaranteed Delivery

NiFi guarantees the delivery of data. This is achieved through effective use of a purpose-built persistent write-ahead log and content repository.

Data Buffering / Pressure Release

Nifi can buffer data when a given data source outpaces some part of the processing or delivery chain. NiFi also supports the ability to delete queued data after a specified amount of time has elapsed.

Prioritized Queuing

NiFi allows the setting of one or more prioritization schemes for how data is retrieved from a queue. The default is oldest first, but there are times when data should be pulled newest first, largest first, or some other custom scheme.

Quality of Service

There are times when the data must be processed and delivered within seconds to be of any value. NiFi enables the administrator to prioritize latency over throughput or loss tolerance, etc.

Terminology

Apache NiFi revolves around the idea of processors. A processor is a node in the graph that does work. This typically consists of performing some kind of operation on the data, loading the data into NiFi or sending the data out to some external system. Some example of processors are:

GetFile: Loads the content of a file

UpdateAttribute: Updates FlowFile attributes (i.e. schema.name) which can then be accessed by other processors

PublishKafka: Sends the contents of a FlowFile as a message to Apache Kafka

On the other hand, a process group is a collection of processors and their…