Churn prediction

Photo by Mantas Hesthaven on Unsplash

Customer churn, also known as customer attrition, occurs when customers stop doing business with a company. The companies are interested in identifying segments of these customers because the price for acquiring a new customer is usually higher than retaining the old one. For example, if Netflix knew a segment of customers who were at risk of churning they could proactively engage them with special offers instead of simply losing them.

In this post, we will create a simple customer churn prediction model using Telco Customer Churn dataset. We chose a decision tree to model churned customers, pandas for data crunching and matplotlib for visualizations. We will do all of that above in Python.

The code can be used with another dataset with a few minor adjustments to train the baseline model. We also provide a few references and give ideas for new features and improvements.

You can run this code by downloading this Jupyter notebook.

Data Preprocessing

We use pandas to read the dataset and preprocess it. Telco dataset has one customer per line with many columns (features). There aren’t any rows with all missing values or duplicates (this rarely happens with real-world datasets). There are 11 samples that have TotalCharges set to “ “, which seems like a mistake in the data. We remove those samples and set the type to numeric (float).

df = pd.read_csv('data/WA_Fn-UseC_-Telco-Customer-Churn.csv') df = df.dropna(how=”all”) # remove samples with all missing values

df = df[~df.duplicated()] # remove duplicates total_charges_filter = df.TotalCharges == " "

df = df[~total_charges_filter]

df.TotalCharges = pd.to_numeric(df.TotalCharges)

First few samples in Telco Customer Churn dataset

Exploratory Data Analysis

We have 2 types of features in the dataset: categorical (two or more values and without any order) and numerical. Most of the feature names are self-explanatory, except for: