Photo by Tracy Adams on Unsplash

What are Python Virtual Environments?

Virtual environments are isolated coding spaces where Python packages can be installed, upgraded, and used, instead of packages being installed globally in your working environment. Virtual environments can be installed with a .txt or .yml file, that lists the package names and their versions, through the terminal/command prompt/anaconda prompt. When you install or upgrade a package, the old versions stay installed in your directory, so different virtual environments can utilize different package versions.

Why use Virtual Environment in Data Science?

Picture this, you spend months cleaning, manipulating, creating features, training your model, improving the model, and evaluating your model performance; you operationalize your model and put it into production. At this point in time, you haven’t heard about virtual environments, so you move onto the next project. You find a Python package you need for the next project, but you first have to update say, Pandas, so you decided to update all of your packages all in one go using:

conda update --all

You go about your day, but get a warning from your last project, which is currently in production, telling you something is broken. If you’re lucky and the bug isn’t obscure, you are able to fix it. However, if you’re unlucky like my coworkers, and happen to run your production models on a server, AND you break the whole Python path environment, well, bad luck. Time to wipe it clean and host a new server.

You would also want to use project-specific virtual environments to ensure code reproducibility by indicating all packages with their specified versions in the environment. You can also bypass admin rights that might be needed when installing a package, by using a virtual environment. Lastly, using environments is another step you can take at better organizing your projects, or avoid installing packages to your default path when you only need it for one project.

How to Create and Install a Virtual Environment?

Here is one of the way to create an environment using conda