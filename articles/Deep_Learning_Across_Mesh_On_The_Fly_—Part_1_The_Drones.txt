Let’s create a micro-drone swarm that utilizes artificial intelligence and mesh networking to mimic swarm behavior that is typically seen in nature.

Hold on! Don’t go! Hear me out with this concept. By utilizing these buzzwordy technologies we can create something pretty cool and dare I say, useful?

Sure, small drones have terrible flight times (among other things) and yes microprocessors might not be the best solution for AI processing. However, if we keep the scope of the project small then we may be able to pull it off. Something such as mimicking swarm behavior in an indoor environment with multiple quadcopters equipped with an array of sensors.

Still think I’m full of it? What if I told you that I already have the first prototype built?

Let’s jump into it!

How Are The Drones Made?

When starting any project that requires hardware the first thing you should do is determine what components you want to use.

For this case, I opted to use a PCB for the base of the quadcopter. This will minimize the number of parts required for the project. It’ll also allow me to quickly prototype various designs and make changes without having to make multiple parts.

The above base of the quadcopter measures 100mm by 100mm. It is printed on a two-layer PCB, and includes everything needed to make the quadcopter fly!

Time to decide on the flight controller, inertial measurement unit, and how the motors will be controlled.

For my concept drone, I chose the ESP32 as the main flight controller. I chose the ESP32 for its versatility, multiple cores, plenty of PWM pins (pulse width modulation for controlling the speed of the propellers), and mesh network capabilities. The ESP32 can also be optimized for minimal power consumption while still delivering enough power for the given task.