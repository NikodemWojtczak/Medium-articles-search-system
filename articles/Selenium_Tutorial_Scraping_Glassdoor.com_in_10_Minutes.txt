Selenium Tutorial: Scraping Glassdoor.com in 10 Minutes Omer Sakarya · Follow 7 min read · Oct 14, 2019 -- 11 Listen Share

I scraped jobs data from Glassdoor.com for a project. Let me tell you how I did it…

What is Scraping?

It’s a method for collecting information from web pages.

Why Scraping?

Other than the fact that it is fun, Glassdoor’s library provides a limited number of data points. It doesn’t allow you to scrape jobs or reviews. You only get to scrape companies, which was useless in my case. In this guide, I will share my way of doing it along with the Jupyter Notebook.

Why Selenium?

Good question! Glassdoor renders its content with Javascript. Which means that a simple get request to the webpage below would return only the visible content. We are interested in more than that.

There are data points such as company valuation and job location under the “Company” tab and we want to access that information as well. The webpage does not show that content unless the user clicks on the “Company” tab. This makes clicking on the “Company” tab necessary. Using requests library and doing simple get requests would not work for this type of website. Therefore, the only way to scrape that data is to write a program that mimics a human user. Selenium is a library that lets you code a python script that would act just like a human user.

What we will build?

Essentially we will be building a python script that would give us a DataFrame like this: