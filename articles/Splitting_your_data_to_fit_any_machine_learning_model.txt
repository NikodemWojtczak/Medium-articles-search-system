Splitting your data to fit any machine learning model

Split data set into train and test and separate features from the target with just a few lines of code using scikit-learn. Magdalena Konkiewicz · Follow Published in Towards Data Science · 5 min read · Oct 23, 2019 -- 3 Share

Introduction

After you have performed data cleaning, data visualizations, and learned details about your data it is time to fit the first machine learning model into it. Today I want to share with you a few very simple lines of code that will divide any data set into variables that you can pass to any machine learning model and start training it.

It is trivially simple but an understanding of how the split function for training and test data sets work is crucial for any Data Scientist. Let’s dive into it.

Preparing data

We are going to create a simple medical data set for visualization purposes. Imagine that we are trying to predict if the patient is healthy or not based on his weight, height, and information if he drinks alcohol or not. Therefore we will have three columns with this information and a fourth column that holds the record if the patient is healthy or not. This is our target variable, something we want to predict. We will have only 10 patients for simplicity here. Let’s create this data frame:

import pandas as pd

import numpy as np

client_dictionary = {'weight': [112, 123, 176, 145, 198, 211, 145, 181, 90, 101],

'height': [181, 165, 167, 154, 181, 202, 201, 153, 142, 169],

'drinks alcohol': [0, 1, 1, 1, 0, 1, 1, 1, 0, 1],

'healthy': [0, 1, 1, 1, 0, 0, 1, 1, 1, 1],}

df = pd.DataFrame(client_dictionary)

df.head(10)

Our data frame looks like this:

Separating features from the target variable

We should start with separating features for our model from the target variable. Notice that in our case all columns except ‘healthy’ are features that we want to use for the model. Our target variable is ‘healthy’. We can use the following code to do target separation.