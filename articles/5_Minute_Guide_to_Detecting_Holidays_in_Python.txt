If you decide to dive deep into data analysis and want to, for example, analyze purchasing trends, you’ll probably want to construct a new attribute in your dataset having only two possible outcomes — 0 or 1 — is a holiday, isn’t a holiday.

Photo by Artem Sapegin on Unsplash

Take a moment to think about why this derived variable might be useful. You probably won’t uncover a greater volume of purchases on holidays itself, but how did the sales do in the week leading to the holiday?

A whole another animal, isn’t it?

Anyway, in today’s rather quick post I want to discuss one Python library I’ve found some time ago — holidays — yes, that’s the name. It allows you to get dates and names of major holidays for specific year(s) and for a specific country. You might be wondering now how many countries does it support, and the answer will positively surprise you — around 50-ish (with the ability to specify individual regions for some countries).

You can find the whole list here:

The goal of this article is to do some exploration of the library and showcase functions you’ll use most often. We’ll create a list of dates for the whole year of 2019, and from there declare another column which will have the value of 1 if there is (or was) a holiday on that date, and 0 otherwise.

Before jumping into code you’ll need to install the library, so fire up the terminal and execute the following:

pip install holidays

Is everything good? I mean it should, it’s only a pip install for Pete’s sake. Nevertheless, let’s do some real stuff now.

The Imports

Ass always, your Notebook should start with imports. Nothing special here, only Numpy, Pandas, Datetime, and yeah, newly installed Holidays library:

You probably won’t need Numpy to follow along, but I always like to have it imported.

Extracting Holidays