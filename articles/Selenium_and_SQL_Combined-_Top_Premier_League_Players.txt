Selenium and SQL Combined- Top Premier League Players

Source: Jannes Glas via unsplash

The Premier League 2019/20 season is scheduled to begin on Saturday 10th August 2019. Whilst the anticipation grows for the new season, I thought I would investigate the best performers of the Season just gone.

This tutorial piece will demonstrate how we can simply scrape data on the Top Performers of the 2018/19 season, and tabulate that data into a Database Management System (DMS), MySQL. The data gathered can then be queried using SQL.

To begin this tutorial, the first objective is to find a suitable source with key statistics on the Top Premier league players. A quick search leads me to the ‘Premier League Top Scorers’ page found on the BBC Football tab and shown below.

Data Mining

Key statistical metrics I would like to gather data on for each player are: their respective name and team they compete for, goals scored and assists provided, their shot accuracy and finally their minutes per goal ratio.

To begin, I need to find a wrapper that contains all the statistics for each player I am keen on scraping. I right-click in my chrome browser on the page of interest, and hover over the web element that I am searching for. Clearly the wrapper, ‘div.top-player-stats__item.top-player-stats__item — no-image’ contains all the information of interest (as highlighted in the image below).

Before writing any Python code, a working habit I encourage is to switch across to the console tab in the developers tool and search for the elements of interest. This approach is considered best practice because we can visually inspect if we have found our elements of interest.

To use this feature type 2 dollar signs, $$, then input the tag and identifier name in quotations within parentheses.