Photo by Jamie Street on Unsplash

Very often when building web scrapers to collect data, you’ll run into one of these situations:

You want to send the program’s results to someone else

You’re running the script on a remote server and you want automatic, real-time reports on results (e.g. updates on price information from an online retailer, an update indicating a competing company has made changes to their job openings site)

One easy and effective solution is to have your web scraping scripts automatically email their results to you (or anyone else that’s interested).

It turns out this is extremely easy to do in Python. All you need is a Gmail account and you can piggyback on Google’s Simple Mail Transfer Protocol (SMTP) servers. I’ve found this technique really useful, especially for a recent project I created to send myself and my family monthly financial updates from a program that does some customized calculations on our Mint account data.

The first step is importing the built-in Python packages that will do most of the work for us:

import smtplib

from email.mime.text import MIMEText

smtplib is the built-in Python SMTP protocol client that allows us to connect to our email account and send mail via SMTP.

The MIMEText class is used to define the contents of the email. MIME(Multipurpose Internet Mail Extensions) is a standard for formatting files to be sent over the internet so they can be viewed in a browser or email application. It’s been around for ages and it basically allows you to send stuff other than ASCII text over email, such as audio, video, images, and other good stuff. The example below is for sending an email that contains HTML.

Here is example code to build your MIME email:

sender = ‘your_email@email.com’

receivers = [‘recipient1@recipient.com’, ‘recipient2@recipient.com’]

body_of_email = ‘String of html to display in the email’

msg = MIMEText(body_of_email, ‘html’)

msg[‘Subject’] = ‘Subject line goes here’

msg[‘From’] = sender

msg[‘To’] = ‘,’.join(receivers)